{"version":3,"sources":["UpdateForm.js","Track.js","AddForm.js","Tracks.js","index.js"],"names":["UpdateForm","props","handleChange","target","key","name","setState","value","console","log","state","refreshPage","window","location","reload","renderOnSubmit","event","preventDefault","track","_id","url","process","REACT_APP_API_URL","fetch","method","headers","body","JSON","stringify","then","isAdd","track_title","artist","album","genre","year_released","tracks","Tracks","className","onSubmit","this","type","onChange","min","max","Component","Track","deleteTrack","id","confirm","response","json","showUpdateModal","handleOpenUpdateModal","bind","handleCloseUpdateModal","src","alt","onClick","isOpen","refresh","AddForm","getTracks","data","catch","err","showAddModal","handleOpenAddModal","handleCloseAddModal","displayTracks","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17e7b43e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Tracks from './Tracks';\n\nclass UpdateForm extends Component {\n    constructor(props) {\n        super(props);\n        this.tracks = new Tracks();\n        this.state = {\n            // track : this.props.track,\n            // _id : this.props.track._id,\n            track_title : this.props.track.track_title,\n            artist : this.props.track.artist,\n            album : this.props.track.album,\n            genre : this.props.track.genre,\n            year_released : this.props.track.year_released,\n            url : this.props.track.url\n        };\n    };\n\n    handleChange = ({ target }) => {\n        const key = target.name;\n        this.setState({ [key] : target.value }, () => console.log(this.state[key]));\n    };\n\n    refreshPage = () => {\n        window.location.reload(false);\n    };\n\n    renderOnSubmit = (event) => {\n            event.preventDefault();\n\n            console.log(`Updated ID: ${this.props.track._id}`);\n\n            const url = process.env.REACT_APP_API_URL;\n            fetch(`${url}/${this.props.track._id}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'},\n                body: JSON.stringify(this.state)\n            }).then(this.refreshPage)\n            .then(() => {\n                this.setState({\n                    isAdd: true,\n                    _id : '',\n                    track_title : '',\n                    artist : '',\n                    album : '',\n                    genre : '',\n                    year_released : '',\n                    url : ''\n                })\n            });\n    };\n\n    render() {\n        return (\n            <div className=\"formContainer\">\n                <form onSubmit={this.renderOnSubmit} className=\"form\">\n                    <div className=\"inputs\">\n                        <div className=\"title\">\n                            <label className=\"Label\">Title: </label>\n                            <input type=\"text\" className=\"Field\" name=\"track_title\"\n                            value={this.state.track_title} onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"artist\">\n                            <label className=\"Label\">Artist: </label>\n                            <input type=\"text\" className=\"Field\" name=\"artist\"\n                            value={this.state.artist} onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"album\">\n                            <label className=\"Label\">Album: </label>\n                            <input type=\"text\" className=\"Field\" name=\"album\"\n                            value={this.state.album} onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"genre\">\n                            <label className=\"Label\">Genre: </label>\n                            <input type=\"text\" className=\"Field\" name=\"genre\"\n                            value={this.state.genre} onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"year_released\">\n                            <label className=\"Label\">Year Released: </label>\n                            <input type=\"number\" min=\"0\" max=\"2050\" className=\"Field\" \n                            name=\"year_released\" value={this.state.year_released} \n                            onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"url\">\n                            <label className=\"Label\">Album Art URL:</label>\n                            <input type=\"text\" className=\"Field\" name=\"url\"\n                            value={this.state.url} onChange={this.handleChange}/>\n                        </div>\n                    </div>\n                    <input type=\"submit\" className=\"submitButton\" value=\"Save\"/>\n                </form>\n            </div>\n        );\n    };\n};\n\nexport default UpdateForm;","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n// import Tracks from './Tracks';\nimport UpdateForm from './UpdateForm';\nimport './Track.css';\n\nclass Track extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showUpdateModal : false,\n            track : this.props.track,\n            id : this.props.track._id\n        };\n\n        this.handleOpenUpdateModal = this.handleOpenUpdateModal.bind(this);\n        this.handleCloseUpdateModal = this.handleCloseUpdateModal.bind(this);\n    };\n\n    handleOpenUpdateModal() {\n        this.setState({ showUpdateModal : true });\n    };\n\n    handleCloseUpdateModal() {\n        this.setState({ showUpdateModal : false })\n    };\n\n    refreshPage = () => {\n        window.location.reload(false);\n    };\n\n    deleteTrack = (id) => {\n        let result = window.confirm(\"Are you sure you want to delete this track?\");\n        if (result) {\n            const url = process.env.REACT_APP_API_URL;\n            fetch(`${url}/${this.state.track._id}`, {\n                method: \"DELETE\"\n            })\n                .then(response => response.json())\n                .then(console.log(`Deleted ID: ${this.state.track._id}`))\n                .then(this.refreshPage)\n        }\n    };\n    \n    render()  {\n        return(\n            <div className=\"track\" key={this.state.track._id}>\n                <div className=\"flipper\">\n                    <img className=\"albumArt\" src={`${this.state.track.url}`} alt={this.state.track._id}/>\n                    <div className=\"behindArt\">\n                        <div className=\"text\">\n                            <div className=\"pair\">\n                                <div className=\"header\" id=\"trackTitle\">Title:</div>\n                                <div className=\"content\">{this.state.track.track_title}</div>\n                            </div>\n                            <div className=\"pair\">\n                                <div className=\"header\" id=\"artist\">Artist:</div>\n                                <div className=\"content\">{this.state.track.artist}</div>\n                            </div>\n                            <div className=\"pair\">\n                                <div className=\"header\" id=\"album\">Album:</div>\n                                <div className=\"content\">{this.state.track.album}</div>\n                            </div>\n                            <div className=\"pair\">\n                                <div className=\"header\" id=\"genre\">Genre:</div>\n                                <div className=\"content\">{this.state.track.genre}</div>\n                            </div>\n                            <div className=\"pair\">\n                                <div className=\"header\" id=\"yearReleased\">Year:</div>\n                                <div className=\"content\">{this.state.track.year_released}</div>\n                            </div>\n                        </div>\n                        <div className=\"buttons\">\n                            <button className=\"editButton\" onClick={this.handleOpenUpdateModal}>Edit</button>\n                            <ReactModal className=\"addModal\" isOpen={this.state.showUpdateModal}>\n                                <div className=\"modalContent\">\n                                    <div className=\"modalHeaderEdit\">Make Some Changes</div>\n                                    <UpdateForm track={this.state.track} refresh={this.props.refresh}/>\n                                    <div className=\"cancelButtonContainer\">\n                                        <button className=\"addCancelButton\" onClick={this.handleCloseUpdateModal}>Cancel</button>\n                                    </div>\n                                </div>\n                            </ReactModal>\n                            <button className=\"deleteButton\" onClick={this.deleteTrack}>Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Track;","import React, { Component } from 'react';\n\nclass AddForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            track_title : '',\n            artist : '',\n            album : '',\n            genre : '',\n            year_released : '',\n            url : ''\n        };\n    };\n\n    handleChange  = ({ target }) => {\n        const key = target.name;\n        this.setState({ [key] : target.value }, () => console.log(this.state[key]));\n    };\n\n    refreshPage = () => {\n        window.location.reload(false);\n    };\n\n    renderOnSubmit = (event) => {\n        event.preventDefault();\n\n        console.log(\"Add Form Submitted\");\n        console.log(`Title: ${this.state.track_title}`);\n        console.log(`Artist: ${this.state.artist}`);\n        console.log(`Album: ${this.state.album}`);\n        console.log(`Year Released: ${this.state.year_released}`);\n        console.log(`url: ${this.state.url}`);\n\n        const url = process.env.REACT_APP_API_URL;\n        fetch(`${url}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state)\n        }).then(this.refreshPage)\n        .then(() => {\n            this.setState({\n                track_title: '',\n                artist: '',\n                album: '',\n                genre: '',\n                year_released: '',\n                url: ''\n            });\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"formContainer\">\n                <form onSubmit={this.renderOnSubmit} className=\"form\">\n                    <div className=\"inputs\">\n                        <div className=\"title\">\n                            <label className=\"Label\">Title: </label>\n                            <input type=\"text\" className=\"Field\" name=\"track_title\"\n                            value={this.state.track_title} \n                            onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"artist\">\n                            <label className=\"Label\">Artist: </label>\n                            <input type=\"text\" className=\"Field\" name=\"artist\"\n                            value={this.state.artist} \n                            onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"album\">\n                            <label className=\"Label\">Album: </label>\n                            <input type=\"text\" className=\"Field\" name=\"album\"\n                            value={this.state.album} \n                            onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"genre\">\n                            <label className=\"Label\">Genre: </label>\n                            <input type=\"text\" className=\"Field\" name=\"genre\"\n                            value={this.state.genre} \n                            onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"year_released\">\n                            <label className=\"Label\">Year Released: </label>\n                            <input type=\"number\" min=\"0\" max=\"2050\" className=\"Field\" name=\"year_released\"\n                            value={this.state.year_released} \n                            onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"url\">\n                            <label className=\"Label\">Album Art URL:</label>\n                            <input type=\"text\" className=\"Field\" name=\"url\"\n                            value={this.state.url} \n                            onChange={this.handleChange}/>\n                        </div>\n                    </div>\n                    <input type=\"submit\" className=\"submitButton\" value=\"Save\"/>\n                </form>\n            </div>\n        );\n    };\n};\n\nexport default AddForm;","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\nimport Track from './Track';\nimport AddForm from './AddForm';\n\nclass Tracks extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tracks : [],\n            showAddModal : false,\n            // key : '',\n            // value : '',\n            // search : {}\n        };\n\n        this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n        this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n\n        // this.handleOpenUpdateModal = this.handleOpenUpdateModal.bind(this);\n        // this.handleCloseUpdateModal = this.handleCloseUpdateModal.bind(this);\n    };\n\n    // handleSearch = ( { target } ) => {\n    //     const key = target.name;\n    //     this.setState({ [key] : target.value }, () => console.log(this.state[key]));\n    // }\n\n    getTracks = () => {\n        const url = process.env.REACT_APP_API_URL;\n        fetch(`${url}`)\n            .then(response => response.json())\n            .then(data => this.setState({ tracks : data }))\n            .catch(err => err);\n    };\n\n    // getTracksByValue = (key, value) => {\n    //     let newValue = value.replace(/ /g,\"_\")\n\n    //     const url = process.env.REACT_APP_API_URL;\n    //     fetch(`${url}/${key}/${newValue}`)\n    //         .then(response => response.json())\n    //         .then(data => this.setState({ track : this.state.search }))\n    //         .catch(err => err);\n\n    //     window.location.replace(`${url}/${key}/${value}`)\n    // };\n\n    handleOpenAddModal() {\n        this.setState({ showAddModal : true });\n    };\n\n    handleCloseAddModal() {\n        this.setState({ showAddModal : false });\n    };\n\n    // addTrack() {\n    //     let result;\n    //     this.setState({\n    //         isAdd : true\n    //     });\n    //     result = <TrackForm key=\"addForm\" isAdd={this.state.isAdd} track={this.state.updateTrack} refresh={this.getTracks}/>\n    //     return result;\n    // };\n\n    // handleOpenUpdateModal() {\n    //     this.setState({ showUpdateModal : true });\n    // };\n\n    // handleCloseUpdateModal() {\n    //     this.setState({ showUpdateModal : false })\n    // }\n\n    // updateTrack = (track) => {\n    //     let result;\n    //     this.setState({\n    //         isAdd : false,\n    //         showUpdateModal : true,\n    //         updateTrack : track\n    //     });\n    //     const data = this.state.updateTrack;\n    //     result = <UpdateForm key={data._id} relative={data} refresh={this.getTracks}/>\n    //     return result;\n    // };\n\n    // deleteTrack = (id) => {\n    //     const url = process.env.REACT_APP_API_URL;\n    //     fetch(`${url}/${id}`, {\n    //         method: \"DELETE\"\n    //     })\n    //         .then(response => response.json())\n    //         .then(console.log(`Deleted ID: ${this.state.track_id}`))\n    //         .then(this.getTracks);\n    // };\n\n    componentDidMount() {\n        this.getTracks();\n    };\n\n    render() {\n        const displayTracks = this.state.tracks.map((track) => {\n            return (\n                <>\n                    <div className=\"tiles\" key={track._id}>\n                        <Track key={track._id}\n                        track={ track } refresh={this.getTracks}/>\n                    </div>\n                </>\n            );\n        });\n\n        return (\n            <div>  \n                <div className=\"totality\">\n                    <div className=\"background\">\n                        <div className=\"backgroundImg\"></div>\n                    </div>\n                    <div className=\"mainTitle\">\n                        <div className=\"title\">Sonic Acuity</div>\n                    </div>\n                    <div className=\"blackSpace\"/>\n                    <div className=\"mainBody\">\n                        {/* <div className=\"searchBarContainer\">\n                            <div className=\"searchBarTitle\">Do I have what you're looking for?</div>\n                            <form className=\"searchBar\" onSubmit={this.getTracksByValue}>\n                                <select className=\"searchDropDown\" value={this.state.key} onChange={this.handleSearch}>\n                                    <option value=\"blankSpace\"></option>\n                                    <option value=\"track_title\">Title</option>\n                                    <option value=\"artist\">Artist</option>\n                                    <option value=\"album\">Album</option>\n                                    <option value=\"genre\">Genre</option>\n                                </select>\n                                <input type=\"text\" className=\"searchField\" placeholder=\"Search...\" value={this.state.value} onChange={this.handleSearch}/>\n                                <input type=\"submit\" className=\"searchButton\" value=\"Search\"/>\n                            </form>\n                        </div> */}\n                        <div className=\"tileContainer\">\n                            <div className=\"tileRows\">{ displayTracks }</div>\n                        </div>\n                    </div>\n                    <div>\n                        <div></div>\n                        <div className=\"addButtonContainer\">\n                            <div className=\"addText\">Did I miss some?</div>\n                            <button className=\"addButton\" onClick={this.handleOpenAddModal}>Add to the Collection</button>\n                            <ReactModal className=\"addModal\" isOpen={this.state.showAddModal}>\n                                <div className=\"modalContent\">\n                                    <div className=\"modalHeader\">Add a Favorite</div>\n                                    <AddForm className=\"formCall\" refresh={this.getTracks}/>\n                                    <div className=\"cancelButtonContainer\">\n                                        <button className=\"addCancelButton\" onClick={this.handleCloseAddModal}>Cancel</button>\n                                    </div>\n                                </div>\n                            </ReactModal>\n                        </div>\n                        <div></div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Tracks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tracks from './Tracks';\n// import App from './init-components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Tracks />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}